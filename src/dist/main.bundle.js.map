{"version":3,"sources":["/Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/$_gendir lazy","/Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/app.component.html","/Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/app.component.ts","/Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/app.module.ts","/Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/conv/Sentence.ts","/Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/conv/conversation.component.ts","/Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/conv/conversation.css","/Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/conv/conversation.html","/Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/conv/conversation.service.ts","/Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/customer/Customer.ts","/Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/customer/customer.component.html","/Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/customer/customer.component.ts","/Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/customer/customer.css","/Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/customer/customers.component.html","/Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/customer/customers.component.ts","/Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/customer/customers.service.ts","/Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/home.component.css","/Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/home.component.html","/Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/home.component.ts","/Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/home.service.ts","/Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/login/User.ts","/Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/login/alert.service.ts","/Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/login/auth.guard.ts","/Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/login/authentication.service.ts","/Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/login/login.component.html","/Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/login/login.component.ts","/Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/environments/environment.prod.ts","/Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../client/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/$$_gendir lazy\n// module id = ../../../../../client/$$_gendir lazy recursive\n// module chunks = main","module.exports = \"<!--This is really the placeholder to support top and bottom parts of the page + the internal content derived\\nfrom the routing mechanism -->\\n<div class=\\\"container\\\" >\\n    <div class=\\\"jumbotron\\\" style=\\\"background-image: url(assets/images/top.png)\\\">\\n\\n    <h2 style=\\\"color:white\\\">Green Telco Portal</h2>\\n    </div>\\n    <router-outlet></router-outlet>\\n    <footer>\\n      <p>&copy; IBM | Cloud Architecture Service Engineering | {{version}} </p>\\n    </footer>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/app.component.html\n// module id = ../../../../../client/app/app.component.html\n// module chunks = main","\n\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n    version:string =\"v0.0.1 1/08/2018\";\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/app.component.ts","/**\n * Copyright 2017 IBM Corp. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent }          from './app.component';\nimport { HomeComponent }         from './home.component';\nimport { LoginComponent }        from './login/login.component';\nimport { ConversationComponent}  from './conv/conversation.component';\nimport { ConversationService }   from './conv/conversation.service';\nimport { HomeService }           from './home.service';\nimport { AuthGuard }             from './login/auth.guard';\nimport { AuthenticationService } from \"./login/authentication.service\";\nimport { AlertService }          from \"./login/alert.service\";\nimport { CustomersComponent}     from './customer/customers.component';\nimport { CustomersService }      from './customer/customers.service';\nimport { CustomerDetailComponent}    from './customer/customer.component';\n\n// Define internal URL mapping to component, protect with authentication guard, meaning user\n// needs to be authenticated with a login\nconst routes: Routes = [\n  { path: 'home', component: HomeComponent,canActivate: [AuthGuard]},\n  { path: 'log', component: LoginComponent },\n  //canActivate: [AuthGuard]\n  { path: 'itSupport', component: ConversationComponent,canActivate: [AuthGuard]},\n  { path: 'customer', component: CustomersComponent,canActivate: [AuthGuard]},\n  // otherwise redirect to home\n  { path: '**', redirectTo: 'home' }\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    ConversationComponent,\n    CustomersComponent,\n    CustomerDetailComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    RouterModule.forRoot(routes)\n  ],\n  providers: [\n    AlertService,\n    AuthenticationService,\n    AuthGuard,\n    ConversationService,\n    CustomersService,\n    HomeService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/app.module.ts","export class Sentence {\n  direction: string;\n  text : string;\n  options: string[];\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/conv/Sentence.ts","import {Component} from '@angular/core';\nimport { ConversationService }  from './conversation.service';\nimport { Sentence } from \"./Sentence\";\n\n@Component({\n    //moduleId: module.id,\n    selector: 'conversation',\n    styleUrls:['conversation.css'],\n    templateUrl:'conversation.html'\n  })\n\nexport class ConversationComponent {\n  currentDialog : Sentence[]=[];\n  context:any={\"type\":\"base\"}; // used to keep the Conversation context\n  message:string;\n  /**\n  When creating a conversation component call Watson to get a greetings message as defined in the Dialog. This is more user friendly.\n  */\n  constructor(private convService : ConversationService){\n    // Uncomment this line if you do not have a conversation_start trigger in a node of your dialog\n    this.callConversationBFF(\"Hello\");\n  }\n\n  // variable used for the input field in html page to get user query\n  queryString=\"\"\n\n  callConversationBFF(msg:string) {\n    this.convService.submitMessage(msg,this.context).subscribe(\n      data => {\n        this.context=data.context;\n        let s:Sentence = new Sentence();\n        s.direction=\"from-watson\";\n        s.text=data.output.text[0];\n        this.currentDialog.push(s)\n      },\n      error => {\n        return \"Error occurs in conversation processing\"\n        }\n    )\n  }\n\n  submit(){\n    let obj:Sentence = new Sentence();\n    obj.direction=\"to-watson\";\n    obj.text=this.queryString;\n    this.currentDialog.push(obj);\n\n    this.callConversationBFF(this.queryString);\n    this.queryString=\"\";\n  }\n\n  keyMessage(event){\n     if(event.keyCode == 13) {\n        this.submit();\n      }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/conv/conversation.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".conversation-container {\\n  border-style: solid;\\n  max-width: 900px;\\n  margin: 30px auto;\\n  border-width : 2px;\\n  border-radius: 8px;\\n  border-color: #blue;\\n}\\n\\n.scrolling-box {\\n  padding: 0px 5px;\\n  height: calc(100vh - 200px);\\n  max-height: 600px;\\n  overflow-x: hidden;\\n  overflow-y: auto;\\n}\\n\\n.message-box {\\n  margin: 20px 0px;\\n  overflow: hidden;\\n}\\n\\n.to-watson {\\n    margin-left: 30%;\\n}\\n.to-watson-icon {\\n  float: right;\\n  font-size: 40px;\\n}\\n.to-watson-text {\\n  padding: 0px 20px;\\n  border-radius: 20px;\\n  float: right;\\n  background: #a9ef1c;\\n  color:white;\\n  max-width: calc(100% - 60px);\\n}\\n\\n.from-watson {\\n  max-width: 70%;\\n}\\n.from-watson-icon {\\n  float: left;\\n}\\n.from-watson-text {\\n  background: #8bc9ef;\\n  padding: 15px 20px;\\n  border-radius: 20px;\\n  float: left;\\n  color:blue;\\n  max-width: calc(100% - 60px);\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/conv/conversation.css\n// module id = ../../../../../client/app/conv/conversation.css\n// module chunks = main","module.exports = \"<div class=\\\"collapse navbar-collapse\\\" id=\\\"main-navbar\\\">\\n  <ul class=\\\"nav navbar-nav\\\">\\n      <li class=\\\"\\\"><a [routerLink]=\\\"['/']\\\">Home</a></li>\\n  </ul>\\n</div>\\n<div class='row'>\\n  <div class='col-xs-4'>\\n    <p>Welcome to Green Telco Support:</p>\\n    <ul>\\n      <li>I do not understand my rate plan</li>\\n    </ul>\\n  <br/>\\n</div>\\n  <div class=\\\"col-xs-8\\\">\\n     <div class=\\\"conversation-container\\\">\\n        <div class=\\\"scrolling-box\\\">\\n          <div *ngFor=\\\"let p of currentDialog\\\">\\n             <div class=\\\"message-box\\\">\\n               <div class=\\\"{{p.direction}}\\\">\\n                  <div class=\\\"{{p.direction+'-icon'}}\\\" >\\n                    <span *ngIf=\\\"p.direction === 'to-watson'\\\" class=\\\"glyphicon glyphicon-user\\\" aria-hidden=\\\"true\\\"></span>\\n                    <div *ngIf=\\\"p.direction === 'from-watson'\\\" class=\\\"from-watson-icon\\\">\\n                      <img src='assets/images/watson-globe.png' style='width:50px'>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"{{p.direction+'-text'}}\\\" [innerHTML]=\\\"p.text\\\">\\n                  </div>\\n                </div>\\n            </div>\\n          </div>\\n        </div>\\n        <form class=\\\"form-inline\\\" autocomplete=\\\"off\\\" (keydown)=\\\"keyMessage($event)\\\">\\n            <div class=\\\"form-group \\\" style=\\\"padding:20px\\\">\\n                <input class=\\\"form-control message-box\\\"\\n                       type=\\\"text\\\"\\n                       size=\\\"60\\\"\\n                       [(ngModel)]=\\\"queryString\\\"\\n                       placeholder=\\\"Send a message to Support Bot!\\\"\\n                       name=\\\"queryString\\\"\\n                       autocomplete=\\\"off\\\"/>\\n                <button class=\\\"btn btn-primary\\\" (click)=\\\"submit()\\\" type=\\\"button\\\">Send</button>\\n            </div>\\n        </form>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/conv/conversation.html\n// module id = ../../../../../client/app/conv/conversation.html\n// module chunks = main","import { Injectable }    from '@angular/core';\nimport { Headers, Http,Response,RequestOptions } from '@angular/http';\nimport 'rxjs/add/operator/toPromise';\nimport {Observable} from 'rxjs/Rx';\nimport 'rxjs/add/operator/map';\n\n\n@Injectable()\nexport class ConversationService {\n  private convUrl ='/api/c/conversation/';\n\n  constructor(private http: Http) {\n  };\n\n  submitMessage(msg:string,ctx:any): Observable<any>{\n    let bodyString = JSON.stringify(  { text:msg,context:ctx });\n\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers })\n    return this.http.post(this.convUrl,bodyString,options)\n         .map((res:Response) => res.json())\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/conv/conversation.service.ts","export class Customer {\n  id: number;\n  name : string;\n  firstName : string;\n  lastName: string;\n  gender: string;\n  emailAddress: string;\n  estimatedIncome: number;\n  age: number;\n  profession: string;\n  childre: number;\n  usage:number;\n  email: string;\n  maritalStatus:string;\n  ratePlan: string;\n  carOwner: number;\n  type: string;\n  status: string;\n  zipcode:string;\n  accountNumber:string;\n  balance:number;\n  longDistance:number;\n  international:number;\n  local:number;\n  dropped:number;\n  paymentMethod:string;\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/customer/Customer.ts","module.exports = \"<div *ngIf=\\\"customer\\\" class=\\\"row\\\">\\n  <h2>{{customer.name}} details!</h2>\\n  <p>{{message}}</p>\\n  <div><label>id: </label>{{customer.id}}</div>\\n  <div class=\\\"form-group\\\">\\n      <label for=\\\"name\\\">Name</label>\\n      <input autofocus type=\\\"text\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"customer.name\\\" name=\\\"name\\\" id=\\\"name\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n      <label for=\\\"firstName\\\">First Name</label>\\n      <input autofocus type=\\\"text\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"customer.firstName\\\" name=\\\"firstName\\\" id=\\\"firstName\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n      <label for=\\\"lastName\\\">Last Name</label>\\n      <input autofocus type=\\\"text\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"customer.lastName\\\" name=\\\"lastName\\\" id=\\\"lastName\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n      <label for=\\\"emailAddress\\\">Email Address</label>\\n      <input autofocus type=\\\"text\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"customer.emailAddress\\\" name=\\\"emailAddress\\\" id=\\\"emailAddress\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n      <label for=\\\"age\\\">Age</label>\\n      <input autofocus type=\\\"text\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"customer.age\\\" name=\\\"age\\\" id=\\\"age\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n      <label for=\\\"gender\\\">Gender</label>\\n      <input autofocus type=\\\"text\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"customer.gender\\\" name=\\\"gender\\\" id=\\\"gender\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n      <label for=\\\"status\\\">Status</label>\\n      <input autofocus type=\\\"text\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"customer.status\\\" name=\\\"status\\\" id=\\\"status\\\">\\n  </div>\\n  <div>\\n      <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"save()\\\">Save</button>\\n      <button class=\\\"btn glyphicon glyphicon-book\\\" type=\\\"button\\\" (click)=\\\"viewAccount()\\\"></button>\\n  </div>\\n</div>\\n<div *ngIf=\\\"account\\\" class=\\\"row\\\">\\n  <div class=\\\"form-group\\\">\\n      <label for=\\\"accountNumber\\\">Account Number</label>\\n      <input autofocus type=\\\"text\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"customer.accountNumber\\\" name=\\\"accountNumber\\\" id=\\\"accountNumber\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n      <label for=\\\"balance\\\">Balance</label>\\n      <input autofocus type=\\\"text\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"customer.balance\\\" name=\\\"balance\\\" id=\\\"balance\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n      <label for=\\\"local\\\">Local Usage</label>\\n      <input autofocus type=\\\"text\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"customer.local\\\" name=\\\"local\\\" id=\\\"local\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n      <label for=\\\"longDistance\\\">Long Distance</label>\\n      <input autofocus type=\\\"text\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"customer.longDistance\\\" name=\\\"longDistance\\\" id=\\\"longDistance\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n      <label for=\\\"international\\\">International</label>\\n      <input autofocus type=\\\"text\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"customer.international\\\" name=\\\"international\\\" id=\\\"international\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n      <label for=\\\"paymentMethod\\\">Payment Method</label>\\n      <input autofocus type=\\\"text\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"customer.paymentMethod\\\" name=\\\"paymentMethod\\\" id=\\\"paymentMethod\\\">\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/customer/customer.component.html\n// module id = ../../../../../client/app/customer/customer.component.html\n// module chunks = main","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CustomersService }  from './customers.service';\nimport { Customer } from './Customer';\n\n@Component({\n  selector: 'customer-detail',\n  templateUrl:'customer.component.html'\n})\nexport class CustomerDetailComponent {\n  // Item is injected by the parent inventory component. As new item or from an existing one\n  @Input() customer: Customer;\n  @Input() newCustomer : boolean;\n  // specify to the parent we are done with editing -> saving\n  @Output() onComplete = new EventEmitter<any>();\n  message : string =\"\";\n  account : boolean= false;\n\n  // delegate the call to BFF via local service\n  constructor(private customerService : CustomersService){\n  }\n\n  save(): void  {\n    if (this.newCustomer) {\n      this.customerService.saveCustomer(this.customer).subscribe(\n          data => {\n            console.log('data from saveCustomer',data)\n            this.customer=data;\n            this.customer.id = data[0].id;\n            this.message=\"Success\";\n            this.onComplete.emit({success: true, customer: this.customer});\n          },\n          error => {\n            console.error(\"Error on save operation:\"+error);\n            this.message=\"Error on save\";\n            this.onComplete.emit({success: false, customer: this.customer, error: error});\n          }\n        );\n    } else {\n      this.customerService.updateCustomer(this.customer).subscribe(\n          data => {\n            // this.item=data;\n            this.message=\"Success\";\n            this.onComplete.emit({success: true, customer: this.customer});\n          },\n          error => {\n            console.error(\"Error on update operation:\"+error);\n            this.message=\"Error on update\";\n            this.onComplete.emit({success: false, customer: this.customer, error: error});\n          }\n        );\n    }\n  }\n\n  viewAccount(): void {\n    this.account=!this.account;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/customer/customer.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".selected {\\n  background-color: #CFD8DC !important;\\n  color: white;\\n}\\n.customers {\\n  margin: 0 0 2em 0;\\n  list-style-type: none;\\n  padding: 0;\\n  width: 15em;\\n}\\n.customers li {\\n  cursor: pointer;\\n  position: relative;\\n  left: 0;\\n  background-color: #EEE;\\n  margin: .5em;\\n  padding: .3em 0;\\n  height: 1.6em;\\n  border-radius: 4px;\\n}\\n.customers li.selected:hover {\\n  background-color: #BBD8DC !important;\\n  color: white;\\n}\\n.customers li:hover {\\n  color: #607D8B;\\n  background-color: #DDD;\\n  left: .1em;\\n}\\n.customers .text {\\n  position: relative;\\n  top: -3px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/customer/customer.css\n// module id = ../../../../../client/app/customer/customer.css\n// module chunks = main","module.exports = \"<div class=\\\"collapse navbar-collapse\\\" id=\\\"main-navbar\\\">\\n  <ul class=\\\"nav navbar-nav\\\">\\n      <li class=\\\"\\\"><a [routerLink]=\\\"['/']\\\">Home</a></li>\\n  </ul>\\n</div>\\n<h2>Customer Management  <i *ngIf=\\\"loading\\\" class=\\\"fa fa-cog fa-spin fa-3x fa-fw\\\"></i> <span><button class=\\\"btn btnbg glyphicon glyphicon-plus\\\" type=\\\"button\\\" (click)=\\\"add()\\\"></button></span></h2>\\n<div class=\\\"row\\\">\\n  <p>{{message}}</p>\\n  <div class=\\\"col-md-7\\\" *ngIf=\\\"!loading\\\">\\n      <table id=\\\"dataTable\\\" class=\\\"table table-striped table-condensed\\\">\\n        <thead>\\n          <tr>\\n            <th>Id</th>\\n            <th>Name</th>\\n            <th>Gender</th>\\n            <th>Email</th>\\n            <th>Status</th>\\n            <th style=\\\"background-color: white; border-width:0;\\\"></th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr class=\\\"customers\\\" *ngFor=\\\"let customer of customers;let i = index\\\">\\n             <td>{{customer.id}}</td>\\n             <td>{{customer.name}}</td>\\n             <td>{{customer.gender}}</td>\\n             <td>{{customer.emailAddress}}</td>\\n             <td>{{customer.status}}</td>\\n             <td style=\\\"background-color: white; border-width:0;\\\">\\n               <button class=\\\"btn glyphicon glyphicon-edit\\\" type=\\\"button\\\"  (click)=\\\"edit(customer)\\\"></button>\\n               <button class=\\\"btn glyphicon glyphicon-trash\\\" type=\\\"button\\\" (click)=\\\"remove(i)\\\"></button>\\n             </td>\\n           </tr>\\n         </tbody>\\n       </table>\\n     </div>\\n     <div class=\\\"col-md-5\\\" *ngIf=\\\"selectedCustomer\\\">\\n       <customer-detail [customer]=\\\"selectedCustomer\\\" [newCustomer]=\\\"newCustomer\\\" (onComplete)=\\\"customerUpdateComplete($event)\\\"></customer-detail>\\n     </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/customer/customers.component.html\n// module id = ../../../../../client/app/customer/customers.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\nimport { CustomersService }  from './customers.service';\nimport { Customer } from \"./Customer\";\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'customers',\n    styleUrls:['customer.css'],\n    templateUrl:'customers.component.html'\n  })\n\nexport class CustomersComponent implements OnInit {\n  customers : Customer[]=[];\n  message: string = \"May take some time to load....\";\n  loading: boolean= true;\n  selectedCustomer: Customer;\n  index: number = -1;\n  submitError: string;\n  newCustomer : boolean = false;\n\n  constructor(private router: Router, private custService : CustomersService){\n  }\n\n  // Uses in init to load data and not the constructor.\n  ngOnInit(): void {\n    this.getCustomers();\n  }\n\n  getCustomers(): void {\n    if (this.customers.length === 0) {\n      this.custService.getCustomers().subscribe(\n        data => {\n          this.customers=data;\n          this.loading=false;\n          this.message=\"\";\n        },\n        error => {\n          this.message=\"Error to get the data from backend\";\n          console.log(error);\n          this.loading=false;\n          }\n      )\n    }\n  } // get Customers\n\n  edit(customer): void {\n    this.selectedCustomer = JSON.parse(JSON.stringify(customer));\n    this.submitError = \"\";\n    this.newCustomer=false;\n  }\n\n  add() : void {\n    this.selectedCustomer = new Customer();\n    this.selectedCustomer.name = \"NewCustomer\";\n    this.submitError = \"\";\n    this.newCustomer=true;\n  }\n\n  remove(i): void {\n    this.index=i;\n    this.custService.deleteCustomer(this.customers[i].id).subscribe(\n        data => {\n          var updatedCustomers = this.customers.slice();\n          updatedCustomers.splice(this.index, 1);\n          this.customers=updatedCustomers;\n          this.message=\"Remove customer successful\";\n          this.selectedCustomer=null;\n        },\n        error =>{\n          console.error('Error in removing item...', error)\n          alert(`${error.status}: ${error.statusText}`);\n          this.message=\"Error in removing item,... the error is reported to administrator.\";\n          this.selectedCustomer=null;\n          if(error.status == 401){\n            this.router.navigate(['log'], { queryParams: { returnUrl: '/inventory' } });\n          }\n        }\n    );\n\n  }\n\n\n  customerUpdateComplete(response: any){\n    console.log('Customer Save Success:', response.success, response.customer)\n    if(response.success){\n      var customerUpdated = false;\n      for(var i = 0; i < this.customers.length; i++){\n        if(this.customers[i].id == response.customer.id){\n          this.customers[i] = response.customer\n          customerUpdated = true;\n          console.log('customer updated!');\n          break;\n        }\n      }\n      if(!customerUpdated){\n        this.customers.push(response.customer);\n        console.log('new customer added!', response.item)\n      }\n      this.selectedCustomer = null;\n    } else {\n      console.error('ERROR SAVING CUSTOMER', response.error);\n      alert(`Error Saving Item: (${response.error.status}) ${response.error.statusText}`);\n      if(response.error.status == 401){\n        this.router.navigate(['log'], { queryParams: { returnUrl: '/customer' } });\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/customer/customers.component.ts","import { Injectable }    from '@angular/core';\nimport { Headers, Http,Response,RequestOptions } from '@angular/http';\nimport 'rxjs/add/operator/toPromise';\nimport {Observable} from 'rxjs/Rx';\nimport 'rxjs/add/operator/map';\n\n\n@Injectable()\nexport class CustomersService {\n  private custUrl ='/api/cust';\n\n  constructor(private http: Http) {\n\n  };\n\n  getCustomers(): Observable<any>{\n    return this.http.get(this.custUrl+'/customers')\n         .map((res:Response) =>\n          res.json())\n  }\n\n  saveCustomer(c) : Observable<any> {\n    return this.http.post(this.custUrl+'/customers',{customer:c}).map((res:Response) => res.json());\n  }\n\n  updateCustomer(c): Observable<any> {\n      return this.http.put(this.custUrl+'/customers',{customer:c}).map((res:Response) => res.json());\n  }\n\n  deleteCustomer(idx) : Observable<any> {\n    return this.http.delete(this.custUrl+'/customers/'+idx)\n    .map((res:Response) =>\n       res.json());\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/customer/customers.service.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".roundRect {\\n   margin: auto;\\n   border-width : 2px;\\n   border-radius: 8px;\\n   border-style: solid;\\n   border-color: #blue;\\n   background-color: white;\\n   box-shadow: 10px 10px 5px #blue;\\n   margin-right: 15px;\\n   margin-bottom: 15px;\\n     padding: 20px;\\n   marging: 10px;\\n   height:220px;\\n   width:280px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/home.component.css\n// module id = ../../../../../client/app/home.component.css\n// module chunks = main","module.exports = \"<ol class=\\\"breadcrumb\\\">\\n  <li><a (click)=\\\"logout()\\\">Logout</a></li>\\n</ol>\\n<div class=\\\"row\\\">\\n  <h3 *ngIf=\\\"user\\\">Welcome to the new myGreen Telco {{user.email}} </h3>\\n  <div class=\\\"col-md-6 roundRect\\\" style=\\\"box-shadow: 5px 5px 1px #05870b; border-color: #05870b;\\\">\\n        <h2>Total Balance</h2>\\n        <p>Manage your payment</p>\\n        <p><button (click)=\\\"bill()\\\" class=\\\"btn btn-secondary\\\">See my bill</button></p>\\n  </div>\\n  <div class=\\\"col-md-6 roundRect\\\" style=\\\"box-shadow: 5px 5px 1px #v; border-color: #05870b;\\\">\\n        <h2>Plan</h2>\\n        <p>Your plan</p>\\n        <p><button (click)=\\\"account()\\\" class=\\\"btn btn-secondary\\\">Account</button></p>\\n  </div>\\n  <div class=\\\"col-md-6 roundRect\\\" style=\\\"box-shadow: 5px 5px 1px #05870b; border-color: #05870b;\\\">\\n        <h2>Support Help</h2>\\n        <p>Get help</p>\\n        <p><button (click)=\\\"itSupport()\\\" class=\\\"btn btn-primary\\\">Ask me</button></p>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/home.component.html\n// module id = ../../../../../client/app/home.component.html\n// module chunks = main","import {Component} from '@angular/core';\nimport { Router }   from '@angular/router';\nimport { HomeService }  from './home.service';\nimport { User } from \"./login/User\";\n/*\nMain page component to display access to the different demo features.\n*/\n\n@Component({\n    selector: 'home',\n    styleUrls: ['./home.component.css'],\n    templateUrl: './home.component.html'\n  })\n\n  export class HomeComponent {\n    user: User;\n\n\n    constructor(private router: Router,private homeService : HomeService) {\n      this.user = JSON.parse(localStorage.getItem('currentUser'));\n    }\n\n    account(){\n      this.router.navigate(['account']);\n    }\n\n    itSupport(){\n      this.router.navigate(['itSupport']);\n    }\n    // ADD Here methods to be called from HTLM button to route to other component\n\n    logout(){\n        localStorage.removeItem('currentUser');\n        this.user=new User();\n        this.router.navigate(['log']);\n    }\n\n    bill(){\n      this.router.navigate(['bill']);\n    }\n  }\n\n\n\n// WEBPACK FOOTER //\n// /Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/home.component.ts","import { Injectable }    from '@angular/core';\nimport { Http,Response } from '@angular/http';\nimport 'rxjs/add/operator/toPromise';\nimport {Observable} from 'rxjs/Rx';\nimport 'rxjs/add/operator/map';\n\n/**\nGeneral control service to control the features to expose\n*/\n@Injectable()\nexport class HomeService {\n  private invUrl ='/api';\n\n  constructor(private http: Http) {\n  };\n\n  // this method is used to control the user interface features.  \n  getMode(): Observable<any>{\n    return this.http.get(this.invUrl+'/mode')\n         .map((res:Response) => res.json())\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/home.service.ts","export class User {\n  email: string;\n  password : string;\n  token : string;\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/login/User.ts","/**\n The alert service enables any component in the application to display alert messages\n at the top of the page via the alert component.\n It has methods for displaying success and error messages, and a getMessage() method\n that returns an Observable that is used by the alert component to subscribe to\n notifications for whenever a message should be displayed\n*/\nimport { Injectable } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs/Subject';\n\n@Injectable()\nexport class AlertService {\n    private subject = new Subject<any>();\n    private keepAfterNavigationChange = false;\n\n    constructor(private router: Router) {\n        // clear alert message on route change\n        router.events.subscribe(event => {\n            if (event instanceof NavigationStart) {\n                if (this.keepAfterNavigationChange) {\n                    // only keep for a single location change\n                    this.keepAfterNavigationChange = false;\n                } else {\n                    // clear alert\n                    this.subject.next();\n                }\n            }\n        });\n    }\n\n    success(message: string, keepAfterNavigationChange = false) {\n        this.keepAfterNavigationChange = keepAfterNavigationChange;\n        this.subject.next({ type: 'success', text: message });\n    }\n\n    error(message: string, keepAfterNavigationChange = false) {\n        this.keepAfterNavigationChange = keepAfterNavigationChange;\n        this.subject.next({ type: 'error', text: message });\n    }\n\n    getMessage(): Observable<any> {\n        return this.subject.asObservable();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/login/alert.service.ts","/**\nThe auth guard is used to prevent unauthenticated users from accessing restricted routes. Once\na user is logged in, the user information is persisted in a local storage. So the guard verifies\nis the user is present or not.\nThe mechanism use the router to route to the log, but keep the URL entered by the user to navigate to it\nonce the user is logged in.\n*/\n﻿import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { AuthenticationService } from './authentication.service';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/catch';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n    constructor(private router: Router, private authService: AuthenticationService){ }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | boolean  {\n      return this.authService.authenticated()\n        .map((result) => {\n            if (result.authenticated) {\n              return true;\n            } else {\n              return false;\n            }\n        })\n        .catch(error => {\n          this.router.navigate(['log'], { queryParams: { returnUrl: state.url } });\n          return Observable.of(false);\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/login/auth.guard.ts","/**\nThe authentication service is used to login and logout of the application, to\nlogin it posts the users credentials to the api and checks the response for a\nJWT token, if there is one it means authentication was successful so the user\ndetails including the token are added to local storage.\n\nThe logged in user details are stored in local storage so the user will stay\nlogged in if they refresh the browser and also between browser sessions until\nthey logout. If you don't want the user to stay logged in between refreshes or\nsessions the behaviour could easily be changed by storing user details somewhere\n less persistent such as session storage or in a property of the authentication\n service.\n*/\nimport { Injectable } from '@angular/core';\nimport { Headers, Http,Response,RequestOptions, RequestOptionsArgs} from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport { User } from \"./User\";\n\n@Injectable()\nexport class AuthenticationService {\n    constructor(private http: Http) { }\n\n    login(user:User) {\n      console.log(\"login called for \"+user.email);\n        const body = {username: user.email, password: user.password}\n        return this.http.post('/login', body)\n            .map((response: Response) => {\n                // login successful if there's a jwt token in the response\n                let tokenResponse = response.json();\n                if (tokenResponse && tokenResponse.access_token) {\n                    // store user details and token in local storage to keep user logged in between page refreshes\n                    user.token=tokenResponse.access_token;\n                }\n                return user;\n            })\n            .catch((error:any) => {\n              return Observable.throw(error || 'Server error')\n            });\n    } // login\n    logout() {\n        // remove user from local storage to log user out\n        console.log('logout called');\n        this.http.get('/logout').subscribe();\n        sessionStorage.removeItem('currentUser');\n    }\n    authenticated() {\n      return this.http.get('/api/authenticated', <RequestOptionsArgs>{ withCredentials: true })\n        .map((res: Response) => res.json())\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/login/authentication.service.ts","module.exports = \"\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-7\\\">\\n    <h4><i>Welcome to the Case Inc Portal Application!</i></h4>\\n    <h4>News</h4>\\n    <p>This application illustrates a customer churn scoring using Watson cognitive services, hybrid integration and machine learning model deployed as service with public and private cloud as described in the public github repository <a href=\\\"https://github.com/ibm-cloud-architecture/refarch-cognitive-analytics\\\">cognitive & analytics reference implementation</a> \\n  </div>\\n  <div class=\\\"col-md-5\\\">\\n    <h2>Login</h2>\\n    <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && login()\\\" #f=\\\"ngForm\\\" novalidate>\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'has-error': f.submitted }\\\">\\n              <label for=\\\"email\\\">email</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"user.email\\\" #email=\\\"ngModel\\\" required />\\n              <div *ngIf=\\\"f.submitted && !email.valid\\\" class=\\\"help-block\\\">Email address is required</div>\\n          </div>\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'has-error': f.submitted && !password.valid }\\\">\\n              <label for=\\\"password\\\">Password</label>\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"user.password\\\" #password=\\\"ngModel\\\" required />\\n              <div *ngIf=\\\"f.submitted && !password.valid\\\" class=\\\"help-block\\\">Password is required</div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <button [disabled]=\\\"loggingIn\\\" class=\\\"btn btn-primary\\\"><span *ngIf=\\\"!loggingIn\\\">Login</span><span *ngIf=\\\"loggingIn\\\">Logging in...</span></button>\\n              <!-- <a [routerLink]=\\\"['/signUp']\\\" class=\\\"btn btn-link\\\">Register</a> -->\\n          </div>\\n      </form>\\n      <p style=\\\"color: red;\\\">\\n        {{errorMessage}}\\n      </p>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/login/login.component.html\n// module id = ../../../../../client/app/login/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthenticationService } from \"./authentication.service\";\nimport { AlertService } from \"./alert.service\";\nimport { User } from \"./User\";\n\n/**\nSupports exposing the login forms and calls the back end service, persist the user in local storage\nand route to the return url.\n*/\n@Component({\n  selector: 'login',\n  templateUrl: 'login.component.html'\n})\n\nexport class LoginComponent implements OnInit {\n  user: User = new User();\n  returnUrl: string;\n  errorMessage: string;\n  loggingIn: boolean;\n  constructor(\n      private route: ActivatedRoute,\n      private router: Router,\n      private authenticationService: AuthenticationService,\n      private alertService: AlertService\n    ){}\n\n  ngOnInit() {\n      // reset login status\n      console.log('logging out user - login component')\n      this.authenticationService.logout()\n      this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  login(){\n    this.errorMessage = '' // clear error on begin login\n    this.loggingIn = true;\n    this.authenticationService.login(this.user)\n          .subscribe(\n              data => {\n                  this.loggingIn = true;\n                  this.user=data;\n                  sessionStorage.setItem('currentUser', JSON.stringify(this.user));\n                  this.router.navigate([this.returnUrl]);\n              },\n              error => {\n                  this.loggingIn = false;\n                  this.errorMessage = `${error.status}: ${error.statusText}`\n                  this.alertService.error(error);\n                  this.authenticationService.logout();\n                  this.router.navigate(['/']);\n              });\n  }\n\n  logout(){\n    this.authenticationService.logout()\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/app/login/login.component.ts","export const environment = {\n  production: true\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/environments/environment.prod.ts","/**\n * Copyright 2017 IBM Corp. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment.prod';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// /Users/jeromeboyer/Code/GreenCompute/refarch-cognitive-analytics/src/client/main.ts"],"sourceRoot":"webpack:///"}